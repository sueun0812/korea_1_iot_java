# 자바 기초 용어 모음

---

# 접근제한자(Access Modifiers)

- **public**: 모든 클래스에서 접근 가능
- **protected**: 동일한 패키지내에서 접근 가능, 다른 패키지라도 상속 관계면 접근 가능
- **default**: 기본값, 동일한 패키지내에서 접근 가능하며 중복 불가
- **private**: 동일한 클래스에서만 접근 가능 (같은 파일 X)

→ 접근 범위에 따라 결정

→ 같은 클래스/패키지/상속 클래스에서 접근할 수 있는지 여부가 중요 ‼️

# static

- **static 변수**: 여러 객체에서 값을 공유
- **static 메서드**: 객체 생성없이 사용 가능, static 변수만 사용 가능

→ 객체 인스턴스가 아니라 클래스 자체에 속하는 변수나 메서드

→ 정적 멤버(변수, 메서드)의 경우 인스턴스화 필수 ❌

→ 일반 멤버(변수, 메서드)의 경우 인스턴스화 필수 ‼️

### cf) static class

> 자바에 static class에 대한 개념 ❌
→ 내부 클래스의 형태 중 static 중첩 클래스가 존재
> 

- 정적(static) 중첩 클래스
    
    : 일반 클래스와 달리 외부 클래스의 인스턴스와 독립적으로 존재 가능
    
    → 외부 클래스의 인스턴스 없이도 객체 생성 가능
    

# final

- **final 변수**: 선언과 동시에 초기화, 변수명 대문자, 재할당 불가
- **final 메서드**: 오버라이드 불가
- **final 클래스**: 상속 불가

→ 한 번 정해지면 더 이상 변경되지 않는다는 공통된 특성을 가짐

# abstract

- **abstract 클래스**: 하나 이상의 추상 메서드 필요, 인스턴스화가 불가하여 다른 클래스에서 상속받아서 사용
- **abstract 메서드**: 선언부만 존재, 자식 클래스에서 구현부를 완성하여 사용

# interface `VS` abstract class

- **interface**: 다중 상속 가능, 변수가 public, static, final 특성을 가짐
- **abstract class**: 다중 상속 불가


# extends `VS` implements

- **extends**: 다중 상속 불가
- **implements**: 다중 상속 가능


# super `VS` this

- **this**: 해당 클래스의 변수 사용
- **super**: 부모 클래스의 생성자와 동일하게 사용할 때 사용, 맨 첫줄에 사용


# 오버로딩(Overloading) `vs` 오버라이딩(Overriding)

- **오버로딩**: 하나의 클래스에서 동일한 메서드명으로 동일한 동작 구현 가능 
매개변수의 개수, 타입 중 하나가 달라야함
- **오버라이딩**: 자식 클래스에서 부모 클래스로부터 받은 메서드 기능을 재정의


# try-catch-finally

- **try**: 예외를 일으키는 코드
- **catch**: 예외 발생 시 일어날 동작
- **finally**: 예외와 상관없이 동작


→ 예외 처리 흐름을 제어하는 데 사용